apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: azure-managed-disk
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: redis
          image: redis
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 6379
              name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
    - port: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: mongo
          image: mongo
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: admin
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: abh
          resources:
            requests:
              cpu: 750m
              memory: 768Mi
            limits:
              cpu: 2000m
              memory: 2048Mi
          ports:
            - containerPort: 27017
              name: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  ports:
    - port: 27017
  selector:
    app: mongo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auction-abh-back
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auction-abh-back
  template:
    metadata:
      labels:
        app: auction-abh-back
    spec:
      containers:
        - name: auction-abh-back
          image: bcalvo/abh        # image (needs to be on docker hub)
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: "/mnt/vol"
              name: mediavolume
          ports:
            - containerPort: 8080
          env:
            - name: "REDIS_URL"
              value: redis
            - name: "MONGODB_DATABASE"
              value: mongodbabh
            - name: "MONGODB_HOSTNAME"
              value: mongo
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: mediavolume
          persistentVolumeClaim:
            claimName: azure-managed-disk
---
apiVersion: v1
kind: Service
metadata:
  name: auction-abh-back
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: auction-abh-back