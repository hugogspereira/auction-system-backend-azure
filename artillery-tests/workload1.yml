config:
  # target: "TYPE HERE THE DEPLOYED TARGET"
  target: "http://localhost:8080/scc2223-proj1-1.0/rest"
  http:
    timeout: 10
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true # new mode to aggregate metrics in artillery
  processor: "./test-utils.js"
  variables:
    numAuctions: 20
    maxBids: 5 # maximum number of bids to generate for each new auction
    maxQuestions: 2 # maximum number of questions to generate for each new auction
  phases:
    - name: "Create auctions"
      arrivalRate: 1
      duration: 1

scenarios:
  - name: "Create auctions"
    weight: 1
    flow:
      - loop:
          - function: "selectUserToLogin" # first select a user to login
          - post:
              url: "/user/auth"
              headers:
                Content-Type: application/json
                Accept: application/json
              json:
                nickname: "{{ nickname }}"
                pwd: "{{ pwd }}"
              capture:
                header: "set-cookie"
                as: "cookie"
          - post: # First: post image for the user
              url: "/media"
              headers:
                Content-Type: application/octet-stream
                Accept: application/json
              beforeRequest: "uploadImageBody"
              capture:
                regexp: "(.+)"
                as: "imageId" # capture the reply as image id to be used in user creation
          - function: "genNewAuction" # Generate the needed information for the auction
          - post:
              url: "/auction"
              headers:
                Content-Type: application/json
                Accept: application/json
                Cookie: "{{ cookie[0] }}"
              json:
                title: "{{ title }}"
                description: "{{ description }}"
                photoId: "{{ imageId }}"
                ownerNickname: "{{ nickname }}"
                endTime: "{{ endTime }}"
                minPrice: "{{ minPrice }}"
              capture:
                - json: "id"
                  as: "auctionId"
                - json: "ownerNickname"
                  as: "ownerNickname"
              afterResponse: "processNewAuctionReply" # capture result and store in file
          - loop:
              - function: "selectUserToLogin" # first select a user to login
              - post:
                  url: "/user/auth"
                  headers:
                    Content-Type: application/json
                    Accept: application/json
                  json:
                    nickname: "{{ nickname }}"
                    pwd: "{{ pwd }}"
                  capture:
                    header: "set-cookie"
                    as: "cookie"
              - function: "genNewBid" # Generate the needed information for the bid
              - post:
                  url: "/auction/{{auctionId}}/bid"
                  headers:
                    Content-Type: application/json
                    Accept: application/json
                    Cookie: "{{ cookie[0] }}"
                  json:
                    userNickname: "{{ nickname }}"
                    value: "{{ value }}"
            count: "{{ maxBids }}" # create 2 users to bid
          - loop:
              - function: "selectUserToLogin" # Select user to ask question
              - post:
                  url: "/user/auth"
                  headers:
                    Content-Type: application/json
                    Accept: application/json
                  json:
                    nickname: "{{ nickname }}"
                    pwd: "{{ pwd }}"
                  capture:
                    header: "set-cookie"
                    as: "cookie"
              - function: "genNewQuestion" # Generate the needed information for the question
              - post:
                  url: "/auction/{{auctionId}}/question"
                  headers:
                    Content-Type: application/json
                    Accept: application/json
                    Cookie: "{{ cookie[0] }}"
                  json:
                    userNickname: "{{ nickname }}"
                    message: "{{ question }}"
                  capture:
                    json: "id"
                    as: "questionId"
              - function: "selectUserPwd" # Fetch the password of the owner of the auction
              - post:
                  url: "/user/auth"
                  headers:
                    Content-Type: application/json
                    Accept: application/json
                  json:
                    nickname: "{{ ownerNickname }}"
                    pwd: "{{ ownerPwd }}"
                  capture:
                    header: "set-cookie"
                    as: "cookie"
              - function: "genNewReply" # Generate the needed information for the reply
              - post:
                  url: "/auction/{{auctionId}}/question"
                  headers:
                    Content-Type: application/json
                    Accept: application/json
                    Cookie: "{{ cookie[0] }}"
                  json:
                    userNickname: "{{ ownerNickname }}"
                    reply: "{{ reply }}"
                    message: "{{ message }}"
                    questionId: "{{ questionId }}"
            count: "{{ maxQuestions }}"
        count: "{{ numAuctions }}"
